
{% if extracted_text %}
Extracted text: {{extracted_text}}
{% endif %}


{% if current_error %}
Error: {{current_error}}
{% endif %}

{% if downloaded_files %}
    Files that are already downloaded:
    {% for file in downloaded_files %}
        {{file}}
    {% endfor %}
{% endif %}


Task: {{task_description}}
Current page source: {{filtered_page_source}}

Based on the current state of the web page and the task description given by user, 
generate a step-by-step plan to execute the task. 
If the task is completed, return the result.
If more steps are needed, provide the next steps.

allowed actions with parameters:
    navigate
        url: "https://example.com"
    extract
        selector: "css selector"
    fill_form
        form_data: {"field1": "value1", "field2": "value2", ...}
    submit_form
        submit_button_selector: "css selector"
    wait
        seconds: 5
    download
        url: "<the actual url of file>"
        filename: "<filename for file to be saved>"
    click_button
        selector: "css selector"
    scroll_to_element
        selector: "css selector"
    check_element
        selector: "css selector"
    execute_script
        script: "document.body.style.zoom = '200%'"

Return your response in the following JSON format:
{
    "response": "Human-like response for the user about the current task status."
    "status": "in_progress" or "completed",
    "result": None or "task result if completed",
    "next_steps": [
        {"action": "action_name", "parameters": {...} },
        ...
    ]
}

Rules:
 - the url parameter must contain valid URL. 
 - the filename parameter must contain name given in url. texts like "the filename of the file", filename  etc will be rejected.
 - do not download same file multiple times. 
 - Any response other than the expected JSON format will be rejected.
 - dont use the url again that doesn't give status of 2** code
 - make the status "completed" when the task is completed and return the result.